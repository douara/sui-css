@use "sass:map";

@use "../../../_utils/tokens" as *;
@use "../../../_utils/mixins" as *;

@use "../_tag-utils/colors" as *;

/// Tag Builder
///
/// @type block
/// @author WPMU DEV
///
/// @param {String} $block - Main block name
@mixin build-design($block) {
	// DIR: Left to right.
	// THEME: Light.
	@include sui-class($rtl: false, $theme: light) {
		// Block wrapper.
		@include block($block) {
			@each $color, $states in $sui-tag-primary {
				@if $color == common {
					color: map.get($sui-tag-primary, $color, color);
					background: map.get($sui-tag-primary, $color, background);
				}
				@else {
					&.sui-#{$block}--#{$color} {
						// State: Default
						@if map.get($sui-tag-primary, $color, background) {
							background: map.get($sui-tag-primary, $color, background);
						}
						@if map.get($sui-tag-primary, $color, color) {
							color: map.get($sui-tag-primary, $color, color);
						}
						@if map.get($sui-tag-primary, $color, border-color) {
							border-color: map.get($sui-tag-primary, $color, color);
							background: transparent;
						}

						// State: Hover
						@if map.get($sui-tag-primary, $color, variant) {
							&:hover {
								background: map.get($sui-tag-primary, $color, variant, background);
							}
						}

						// State: Focus
						&:focus {
							outline: 2px solid map.get($sui-tag-primary, $color, background);
							outline-offset: 2px;
							background: map.get($sui-tag-primary, $color, background);
						}
					}
				}
			}

			// State: Disabled
			&.sui-#{$block}--disabled {
				background: map.get($sui-tag-disabled, background);
				color: map.get($sui-tag-disabled, color);
			}
		}
	}
}
