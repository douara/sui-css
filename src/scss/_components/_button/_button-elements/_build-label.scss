@use "sass:map";

@use "../../../_utils/mixins" as *;
@use "../_button-utils/variables" as *;

/// Build Label
/// This function creates styles for the button
/// label element.
/// @type block
/// @author WPMU DEV
///
/// @param {String} $block - Main block name
@mixin build-label($block) {
	// DIR: Left to right.
	// THEME: None.
	@include sui-class($rtl: false, $theme: null) {
		// Block wrapper.
		@include block($block) {
			@if map.has-key($sui-button-font, md, size) {
				font-size: map.get($sui-button-font, md, size);
			}
			@if map.has-key($sui-button-font, md, height) == true {
				line-height: map.get($sui-button-font, md, height);
			}
			@if map.has-key($sui-button-font, md, spacing) == true {
				letter-spacing: map.get($sui-button-font, md, spacing);
			}
			@if map.has-key($sui-button-font, md, weight) == true {
				font-weight: map.get($sui-button-font, md, weight);
			}

			@if map.has-key($sui-button-font, sm) {
				@include modifier(sm) {
					@if map.has-key($sui-button-font, sm, size) == true {
						font-size: map.get($sui-button-font, sm, size);
					}
					@if map.has-key($sui-button-font, sm, height) == true {
						line-height: map.get($sui-button-font, sm, height);
					}
					@if map.has-key($sui-button-font, sm, spacing) == true {
						letter-spacing: map.get($sui-button-font, sm, spacing);
					}
				}
			}

			@include element(label) {
				display: block;
				margin: 0 4px;
			}
		}
	}
}
